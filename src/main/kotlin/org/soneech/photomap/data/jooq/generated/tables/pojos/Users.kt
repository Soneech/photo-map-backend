/*
 * This file is generated by jOOQ.
 */
package org.soneech.photomap.`data`.jooq.generated.tables.pojos


import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.io.Serializable

import javax.annotation.processing.Generated


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.20"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
data class Users(
    var id: Long? = null,
    @get:NotNull
    @get:Size(max = 255)
    var name: String? = null,
    @get:NotNull
    @get:Size(max = 320)
    var email: String? = null,
    @get:NotNull
    @get:Size(max = 1000)
    var password: String? = null,
    @get:NotNull
    var roleId: Long? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Users = other as Users
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.name == null) {
            if (o.name != null)
                return false
        }
        else if (this.name != o.name)
            return false
        if (this.email == null) {
            if (o.email != null)
                return false
        }
        else if (this.email != o.email)
            return false
        if (this.password == null) {
            if (o.password != null)
                return false
        }
        else if (this.password != o.password)
            return false
        if (this.roleId == null) {
            if (o.roleId != null)
                return false
        }
        else if (this.roleId != o.roleId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.name == null) 0 else this.name.hashCode())
        result = prime * result + (if (this.email == null) 0 else this.email.hashCode())
        result = prime * result + (if (this.password == null) 0 else this.password.hashCode())
        result = prime * result + (if (this.roleId == null) 0 else this.roleId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Users (")

        sb.append(id)
        sb.append(", ").append(name)
        sb.append(", ").append(email)
        sb.append(", ").append(password)
        sb.append(", ").append(roleId)

        sb.append(")")
        return sb.toString()
    }
}
