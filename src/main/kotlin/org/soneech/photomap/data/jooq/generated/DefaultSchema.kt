/*
 * This file is generated by jOOQ.
 */
package org.soneech.photomap.`data`.jooq.generated


import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.20"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", org.soneech.photomap.`data`.jooq.generated.DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>ROLES</code>.
     */
    val ROLES: org.soneech.photomap.`data`.jooq.generated.tables.Roles get() = org.soneech.photomap.`data`.jooq.generated.tables.Roles.ROLES

    /**
     * The table <code>USERS</code>.
     */
    val USERS: org.soneech.photomap.`data`.jooq.generated.tables.Users get() = org.soneech.photomap.`data`.jooq.generated.tables.Users.USERS

    override fun getCatalog(): Catalog = org.soneech.photomap.`data`.jooq.generated.DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        org.soneech.photomap.`data`.jooq.generated.tables.Roles.ROLES,
        org.soneech.photomap.`data`.jooq.generated.tables.Users.USERS
    )
}
