/*
 * This file is generated by jOOQ.
 */
package org.soneech.photomap.`data`.jooq.generated


import javax.annotation.processing.Generated

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = [
        "https://www.jooq.org",
        "jOOQ version:3.19.20"
    ],
    comments = "This class is generated by jOOQ"
)
@Suppress("UNCHECKED_CAST")
open class DefaultSchema : SchemaImpl("", org.soneech.photomap.`data`.jooq.generated.DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>DEFAULT_SCHEMA</code>
         */
        val DEFAULT_SCHEMA: DefaultSchema = DefaultSchema()
    }

    /**
     * The table <code>CATEGORY</code>.
     */
    val CATEGORY: org.soneech.photomap.`data`.jooq.generated.tables.Category get() = org.soneech.photomap.`data`.jooq.generated.tables.Category.CATEGORY

    /**
     * The table <code>COMMENT</code>.
     */
    val COMMENT: org.soneech.photomap.`data`.jooq.generated.tables.Comment get() = org.soneech.photomap.`data`.jooq.generated.tables.Comment.COMMENT

    /**
     * The table <code>FILE_DATA</code>.
     */
    val FILE_DATA: org.soneech.photomap.`data`.jooq.generated.tables.FileData get() = org.soneech.photomap.`data`.jooq.generated.tables.FileData.FILE_DATA

    /**
     * The table <code>MARK</code>.
     */
    val MARK: org.soneech.photomap.`data`.jooq.generated.tables.Mark get() = org.soneech.photomap.`data`.jooq.generated.tables.Mark.MARK

    /**
     * The table <code>MARK_CATEGORY</code>.
     */
    val MARK_CATEGORY: org.soneech.photomap.`data`.jooq.generated.tables.MarkCategory get() = org.soneech.photomap.`data`.jooq.generated.tables.MarkCategory.MARK_CATEGORY

    /**
     * The table <code>MARK_TAG</code>.
     */
    val MARK_TAG: org.soneech.photomap.`data`.jooq.generated.tables.MarkTag get() = org.soneech.photomap.`data`.jooq.generated.tables.MarkTag.MARK_TAG

    /**
     * The table <code>TAG</code>.
     */
    val TAG: org.soneech.photomap.`data`.jooq.generated.tables.Tag get() = org.soneech.photomap.`data`.jooq.generated.tables.Tag.TAG

    /**
     * The table <code>USERS</code>.
     */
    val USERS: org.soneech.photomap.`data`.jooq.generated.tables.Users get() = org.soneech.photomap.`data`.jooq.generated.tables.Users.USERS

    override fun getCatalog(): Catalog = org.soneech.photomap.`data`.jooq.generated.DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        org.soneech.photomap.`data`.jooq.generated.tables.Category.CATEGORY,
        org.soneech.photomap.`data`.jooq.generated.tables.Comment.COMMENT,
        org.soneech.photomap.`data`.jooq.generated.tables.FileData.FILE_DATA,
        org.soneech.photomap.`data`.jooq.generated.tables.Mark.MARK,
        org.soneech.photomap.`data`.jooq.generated.tables.MarkCategory.MARK_CATEGORY,
        org.soneech.photomap.`data`.jooq.generated.tables.MarkTag.MARK_TAG,
        org.soneech.photomap.`data`.jooq.generated.tables.Tag.TAG,
        org.soneech.photomap.`data`.jooq.generated.tables.Users.USERS
    )
}
